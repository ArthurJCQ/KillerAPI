name: KillerAPI push actions
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: [ '8.3' ]
    services:
      postgresql:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: 112358
          POSTGRES_USER: killer
          POSTGRES_DB: symfokiller_test
        ports:
          - 5432:5432
    steps:
      - name: Copy repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@6d7209f44a25a59e904b1ee9f3b0c33ab2cd888d
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      - name: Unit Tests
        run: make unit-tests-ci

      - name: Execute migrations
        run: cp .env.test .env & bin/console do:mi:mi

      - name: Api Tests
        run: cp .env.test .env & APP_ENV=test bin/console lexik:jwt:generate-keypair && make functional-tests-ci

      - name: PHPCS
        run: make phpcs-ci

      - name: PHPStan
        run: make phpstan-ci
